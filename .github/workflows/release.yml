name: Release on Merge To Main
on:
  push:
    branches:
      - main
jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Create a release version
        id: release
        uses: rymndhng/release-on-push-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bump_version_scheme: norelease
    
          releaseNumber: ${{ steps.release.outputs.tag_name }}
      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"        
    outputs:
      sd_version: ${{ steps.release.outputs.version }}
  build:
    needs: [versioning]
    runs-on: ubuntu-latest
    steps:
      - name: Check release version
        run: echo "I'm running on ${{ needs.versioning.outputs.sd_version }}"
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Node.js Setup
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
      - name: Cache node_modules directory
        uses: actions/cache@v2
        id: node_module-cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install NPM packages
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Build frontend
        run: npm run prod
      - name: Create an Archive For Release
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -X -r demo-bundle.zip . -x ".git/*" "node_modules/*" "tests/*" ".github/*" "storage/" package* phpunit.xml "mobile/node_modules/*" # We excluding git, node_modules, and others not needed in production
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: demo-bundle
          path: demo-bundle.zip
      - name: Get Latest Release
        id: latest_version
        uses: abatilo/release-info-action@v1.3.0
        with:
          owner: gabrielcaixeta
          repo: actions-php-test
      - name: Example of consumption of the output
        env:
          LATEST: ${{ steps.latest_version.outputs.latest_tag }}
          LATEST_DATE: ${{ steps.latest_version.outputs.latest_tag_published_at }}
        run: |
          echo "Version $LATEST was released at $LATEST_DATE"
      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: demo-bundle.zip
          asset_name: demo-bundle.zip
          tag: ${{ steps.latest_version.outputs.latest_tag }}
          overwrite: true
